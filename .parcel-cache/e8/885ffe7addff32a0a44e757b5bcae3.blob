var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// create Moviecard component
parcelHelpers.export(exports, "MovieCard", ()=>MovieCard
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// propTypes avoid bugs and validates datatypes
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _card = require("react-bootstrap/Card");
var _cardDefault = parcelHelpers.interopDefault(_card);
var _reactRouterDom = require("react-router-dom");
class MovieCard extends _reactDefault.default.Component {
    render() {
        // 2 props-one function(onMovieclick) and object (movieData)
        const { movieData  } = this.props;
        console.log(movieData);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default, {
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 14
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Img, {
            variant: "top",
            src: movieData.ImagePath,
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 15
            },
            __self: this
        }), "console.log(mo)", /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Body, {
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 17
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Title, {
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 18
            },
            __self: this
        }, movieData.Title), /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Text, {
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 19
            },
            __self: this
        }, movieData.Description), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/movies/${movieData._id}`,
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 20
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "link",
            __source: {
                fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\movie-card\\movie-card.jsx",
                lineNumber: 21
            },
            __self: this
        }, "Open")))));
    }
}
// set static propTypes property on MovieCard to an object that contains special values
// the props object must contain onMovieClick and it must be a function.
// onMovieClick function is passed as a prop to the MovieCard component, it will avoid warning in the console upon running the application 
MovieCard.propTypes = {
    movieData: _propTypesDefault.default.shape({
        Title: _propTypesDefault.default.string.isRequired,
        Description: _propTypesDefault.default.string.isRequired,
        ImagePath: _propTypesDefault.default.string.isRequired,
        Genre: _propTypesDefault.default.shape({
            Name: _propTypesDefault.default.string.isRequired,
            Description: _propTypesDefault.default.string.isRequired
        }),
        Director: _propTypesDefault.default.shape({
            Name: _propTypesDefault.default.string.isRequired,
            Bio: _propTypesDefault.default.string.isRequired,
            Birth: _propTypesDefault.default.string.isRequired
        })
    }).isRequired
};

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}