var helpers = require("../../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoginView", ()=>LoginView
);
//  useState Hook provides a way to simplify and rewrite the class component as a more readable function component
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _s = $RefreshSig$();
function LoginView(props) {
    _s();
    // useState() method is initial value of login variable,returns an array assigning current value to username,setUsername  variable a method to  update username variable.
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    // handleSubmit will log username and password into console
    const handleSubmit = (e)=>{
        e.preventDefault();
        console.log(username, password);
        props.onLoggedIn(username);
    // allow users to be automatically logged in
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement("form", {
        __source: {
            fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\login-view\\login-view.jsx",
            lineNumber: 16
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\login-view\\login-view.jsx",
            lineNumber: 17
        },
        __self: this
    }, "Username:", /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "text",
        value: username,
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\login-view\\login-view.jsx",
            lineNumber: 18
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\login-view\\login-view.jsx",
            lineNumber: 20
        },
        __self: this
    }, "Password:"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "text",
        value: password,
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\login-view\\login-view.jsx",
            lineNumber: 21
        },
        __self: this
    }), /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "submit",
        onClick: handleSubmit,
        __source: {
            fileName: "C:\\Users\\dheer\\Desktop\\CareerFoundry\\myFlix-client\\src\\component\\login-view\\login-view.jsx",
            lineNumber: 22
        },
        __self: this
    }, "Submit")));
}
_s(LoginView, "1VH1WKtCY4wEF2iBjlvknCiq3BE=");
_c = LoginView;
var _c;
$RefreshReg$(_c, "LoginView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}